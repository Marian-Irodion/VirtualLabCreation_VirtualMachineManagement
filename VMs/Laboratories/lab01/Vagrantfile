# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/focal64"

  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = false

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessable to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    	sed -i 's/#deprecation_warnings = True/#deprecation_warnings = False/g' /etc/ansible/ansible.cfg
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
        sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config    
        systemctl restart sshd.service
	apt-get update
	apt-get install -y puppet
	apt-get install -y ansible
	touch setup.yml
	cat > /home/vagrant/setup.yml <<EOF
---
- name: Instalare utilitare
  hosts: localhost
  become: true
  tasks:
    - name: Instalare pachete
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - nano
        - vim
        - zip
        - unzip
        - net-tools

- name: Create users and directories
  hosts: localhost
  become: true
  vars:
    users:
      - name: adina.vaman
        password: adina
      - name: dragos.ioana
        password: dragos
      - name: mihai.coca
        password: mihai
      - name: dan.avram
        password: dan
      - name: constantin.grumazescu
        password: constantin

  tasks:
    - name: Create users
      user:
        name: "{{ item.name }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: /bin/bash
        createhome: yes
        home: "/home/{{ item.name }}"
      with_items: "{{ users }}"

    - name: Create directories
      file:
        path: "/home/{{ item.name }}/{{ item.directory }}"
        state: directory
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: "0755"
      with_items:
        - { name: adina.vaman, directory: ex1 }
        - { name: adina.vaman, directory: ex2 }
        - { name: adina.vaman, directory: ex3 }
        - { name: dragos.ioana, directory: ex1 }
        - { name: dragos.ioana, directory: ex2 }
        - { name: dragos.ioana, directory: ex3 }
        - { name: mihai.coca, directory: ex1 }
        - { name: mihai.coca, directory: ex2 }
        - { name: mihai.coca, directory: ex3 }
        - { name: dan.avram, directory: ex1 }
        - { name: dan.avram, directory: ex2 }
        - { name: dan.avram, directory: ex3 }
        - { name: constantin.grumazescu, directory: ex1 }
        - { name: constantin.grumazescu, directory: ex2 }
        - { name: constantin.grumazescu, directory: ex3 }

    - name: Create readme.txt file
      file:
        path: "/home/{{ item.name }}/readme.txt"
        state: touch
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: "0644"
      with_items:
        - { name: adina.vaman }
        - { name: dragos.ioana }
        - { name: mihai.coca }
        - { name: dan.avram }
        - { name: constantin.grumazescu }

EOF

	ansible-playbook setup.yml

	sudo sed -i 's/.*pam_motd\.so.*/#session optional pam_motd.so/' /etc/pam.d/sshd

  SHELL

end
